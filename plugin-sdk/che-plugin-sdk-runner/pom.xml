<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2012-2015 Codenvy, S.A.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html

    Contributors:
      Codenvy, S.A. - initial API and implementation

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>che-plugin-sdk-parent</artifactId>
        <groupId>org.eclipse.che.plugin</groupId>
        <version>3.13.1-SNAPSHOT</version>
    </parent>
    <artifactId>che-plugin-sdk-runner</artifactId>
    <packaging>jar</packaging>
    <name>Che Plugin :: SDK :: Extensions Runner</name>
    <dependencies>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject.extensions</groupId>
            <artifactId>guice-multibindings</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-api-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-api-dto</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-api-project</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-api-runner</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-commons-inject</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.core</groupId>
            <artifactId>che-core-commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.plugin</groupId>
            <artifactId>che-plugin-java-maven-tools</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.che.plugin</groupId>
            <artifactId>che-plugin-sdk-tools</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jvnet.winp</groupId>
            <artifactId>winp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <executions>
                    <execution>
                        <id>put-current-version</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                        <configuration>
                            <file>${project.build.directory}/classes/codenvyPlatform/pom.xml</file>
                            <token>$current_version$</token>
                            <value>${project.version}</value>
                            <regex>false</regex>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-clean-tomcat</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.codenvy.resources</groupId>
                                    <artifactId>codenvy-tomcat8-slf4j-logback</artifactId>
                                    <version>${version.resource-bundle}</version>
                                    <type>zip</type>
                                    <outputDirectory>${project.build.directory}/classes</outputDirectory>
                                    <destFileName>tomcat.zip</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-tomcat-bundle</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <!-- Unzip Tomcat package -->
                                <mkdir dir="${project.build.directory}/classes/tomcat-bundle" />
                                <unzip dest="${project.build.directory}/classes/tomcat-bundle" src="${project.build.directory}/classes/tomcat.zip" />
                                <delete file="${project.build.directory}/classes/tomcat.zip" />
                                <!-- Move additional libraries and WAR's -->
                                <!--<move todir="${project.build.directory}/classes/tomcat-bundle">-->
                                <!--<fileset dir="${project.build.directory}/classes/tomcat-resources" />-->
                                <!--</move>-->
                                <!-- Copy pre-configured sh-scripts and configuration files -->
                                <copy overwrite="true" todir="${project.build.directory}/classes/tomcat-bundle">
                                    <!--<fileset dir="${project.build.directory}/classes/tomcat-bundle/apache-tomcat-${org.apache.tomcat.version}" />-->
                                    <fileset dir="${project.build.directory}/classes/tomcat" />
                                </copy>
                                <!-- Zip prepared Tomcat binary distribution and remove temporary directory -->
                                <!--<delete dir="${project.build.directory}/classes/tomcat-bundle/apache-tomcat-${org.apache.tomcat.version}" />-->
                                <zip basedir="${project.build.directory}/classes/tomcat-bundle" destfile="${project.build.directory}/classes/sdk-tomcat.zip" />
                                <delete dir="${project.build.directory}/classes/tomcat-bundle" />
                                <!-- Prepare Codenvy Platform sources -->
                                <zip basedir="${project.build.directory}/classes/codenvyPlatform" destfile="${project.build.directory}/classes/CodenvyPlatform.zip" />
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
